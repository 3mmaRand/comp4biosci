# Single linear regression
```{r}
#| results: "asis"
#| echo: false

source("_common.R")
status("drafting")
```

## Overview

choice of test depends on var types; 

include principle: var explained by model is greater then residual var. are the parameters different from zero. 




We will consider linear regression only best fitting straight line:

### Assumptions
Linear

Prediction: One variable causes the other

Axes cannot be switched

X is ‚Äúsampled without error‚Äù; y randomly sampled for each x

### Reporting

Reporting the result: ‚Äúsignificance of effect, direction of effect, magnitude of effect‚Äù


In reporting the result of two-sample test we give:

1. the significance of effect - whether there is there an effect 

2. the direction of effect - positive or negative slope

3. the magnitude of effect - slope


Figures should reflect what you have said in the statements. Ideally they should show both the raw data and the statistical model:

We will explore all of these ideas with an example.

## üé¨ Your turn!

If you want to code along you will need to start a new [RStudio project](workflow_rstudio.html#rstudio-projects) then a new script.

## Single linear regression


Three replicates water baths were set up at each of five temperatures (10, 11C, 12C, 13C, 14C) Ten Brine Shrimp (*Artemia salina*) were placed in each and their average respiration rate per water bath was measured (in arbitrary units). The data are in [shrimp.txt](data-raw/shrimp.txt)

### Import and explore

Import the data:

```{r}
shrimp <- read_table("data-raw/shrimp.txt")
```

```{r}
#| echo: false

knitr::kable(shrimp) %>%
  kableExtra::kable_styling() |> 
  kableExtra::scroll_box(height = "200px")
```

These data are in tidy format [@Wickham2014-nl] - all the respiration values are in one column with another column indicating the water bath temperature. There is only one water bath per row. This means they are well formatted for analysis and plotting.

In the first instance it is sensible to create a rough plot of our data. This is to give us an overview and help identify if there are any issues like missing or extreme values. It also gives us idea what we are expecting from the analysis which will make it easier for us to identify if we make some mistake in applying that analysis.

Scatter plots (`geom_point()`) are a good choice for exploratory plotting with data like these

```{r}
# set.seed(222)
# shrimp <- data.frame(temperature = rep(10:14, each = 3))
# noise <- rnorm(length(shrimp$temperature), sd = 1.1) |> round(2)
# shrimp <- shrimp |> 
#   mutate(respiration = (2 + temperature * 1.) + noise)
# write_delim(shrimp, "data-raw/shrimp.txt")

ggplot(data = shrimp,
       aes(x = temperature, y = respiration)) +
  geom_point()
```



The figure suggests that respiration rate increases with temperature.

### Apply `lm()`

We can create a single linear regression model like this:

```{r}
mod <- lm(data = shrimp, respiration ~ temperature)
```

And examine the model with:

```{r}
summary(mod)
```

The Estimates in the Coefficients table give:

-   `(Intercept)` which is the value of the *y* (the response) when the value of *x* (the explanatory) is zero. 

-   `temperature` which is the slope - the amount of *y* you add for each unit of *x*. `temperature` is positive so respiration rate increases with temperature

The *p*-values on each line are tests of whether that coefficient is different from zero. Thus it is:

`temperature   0.7310     0.1905   3.838  0.00205 **`

that tells us the relationship is significant.

The *F* value and *p*-value in the last line are a test of whether the model as a whole explains a significant amount of variation in the response variable. For a regression, this is exactly equivalent to the test of the slope against zero and the two *p*-values will be the same.

```{r}
#| echo: false
#| label: fig-regression-lm-model
#| fig-cap: "In a linear model, the first estimate is the intercept and the second estimate is the 'slope'.  Note that y axis starts at 15 to create more space for the annotations."
b0 <- mod$coefficients[1] |> round(2)
b1 <- mod$coefficients[2] |> round(2)

ggplot(data = shrimp, 
                aes(x = temperature, y = respiration)) +
  geom_point(colour = pal3[2]) +   
  geom_abline(intercept = b0, 
              slope = b1,
              pal3[1], linetype = 2) +
  geom_smooth(method = "lm", 
              se = FALSE,
              colour = pal3[1]) +
  scale_x_continuous(expand = c(0,0),
                     limits = c(0, 15),
                      name = "Temperature (C)") +
  scale_y_continuous(expand = c(0,0), 
                     limits = c(-0, 20),
                     name = "Respiration (units)") +
  geom_segment(aes(x = 2,
                   xend = 0,
                   y = b0 + 10,
                   yend = b0),
               colour = pal3[2]) +
  annotate("text",
           x = 5, 
           y = b0 + 16,
           label = glue::glue("Intercept (Œ≤0) is { b0 }"), 
           colour = pal3[2],
           size = 4) +
  geom_segment(aes(x = 11,
                   xend = 11,
                   y = b0 + b1 * 10,
                   yend = b0 + b1 * 11),
               colour = pal3[3],
               arrow = arrow(length = unit(0.03, "npc"), 
                             ends = "both")) +
  geom_segment(aes(x = 1.7,
                   xend = 1.5,
                   y = b0 + 3,
                   yend = b0 - 1),
               colour = pal3[2]) +
  annotate("text",
           x = 2, 
           y = b0 + 5,
           label = glue::glue("temperature (Œ≤1) is { b1 }"), 
           colour = pal3[2],
           size = 4) +
  theme_classic()

```

### Check assumptions

Check the assumptions: All t-tests assume the "residuals" are normally distributed and have homogeneity of variance.

First use common sense: respiration is a continuous and we would expect it to be normally distributed thus we would expect the residuals to be normally distributed

Second by plotting residuals:

```{r}
plot(mod, which = 1)
```

```{r}
ggplot(mapping = aes(x = mod$residuals)) + 
  geom_histogram(bins = 10)
```

```{r}
shapiro.test(mod$residuals)
```

Checking the assumptions: normally distributed residuals

-   Variance is about the same for all values of x
-   Looks roughly normal, symmetrical
-   test with shapiro. is NS. note that not significant means not significantly different from a normal distribution. It does not mean definitely normally distributed

### Report

Canariensis shrimpinches ($\bar{x} \pm s.e: 22.48 \pm 0.48$) are significantly heavier than Coelebs ($20.28 \pm 0.48$ ) (*t* = 2.65; *d.f.* = 38; *p* = 0.012). See @fig-shrimp.

```{r}
#| label: fig-shrimp
#| fig-cap: "respiration of two temperature of shrimpinch. Errors bars are ¬± 1 s.e."

# ggplot() +
#   geom_point(data = shrimp, aes(x = temperature, y = respiration),
#              position = position_jitter(width = 0.1, height = 0),
#              colour = "gray50") +
#   geom_errorbar(data = shrimp_summary, 
#                 aes(x = temperature, ymin = mean - se, ymax = mean + se),
#                 width = 0.3) +
#   geom_errorbar(data = shrimp_summary, 
#                 aes(x = temperature, ymin = mean, ymax = mean),
#                 width = 0.2) +
#   scale_y_continuous(name = "respiration (g)", 
#                      limits = c(0, 30), 
#                      expand = c(0, 0)) +
#   scale_x_discrete(name = "temperature", 
#                    labels = c("Canariensis", "Coelebs")) +
#   annotate("segment", x = 1, xend = 2, 
#            y = 28, yend = 28,
#            colour = "black") +
#   annotate("text", x = 1.5,  y = 29, 
#            label = expression(italic(p)~"= 0.012")) +
#   theme_classic()
```
