# Confidence Intervals
```{r}
#| results: "asis"
#| echo: false

source("_common.R")
status("polishing")
```

## What is a confidence interval?

When we calculate a mean from a sample, we are using it to estimate the mean of the population.  Confidence intervals are a range of values and are a way to quantify the uncertainty in our estimate.  When we report a mean with its 95% confidence interval we given the mean plus and minus some variation. We are saying that 95% of the time, that range will contain the population mean. 

The confidence interval is calculated from the sample mean and the standard error of the mean.  The standard error of the mean is the standard deviation of the [sampling distribution of the mean](logic_hyopthesis_testing.html#sampling-distribution-of-the-mean).  

To understand confidence intervals we need to understand some properties of the normal distribution.

## The normal distribution

A [distribution](ideas_about_data.html#distributions) describes the values the variable can take and the chance of them occurring. A distribution has a general type, given by the function and is further tuned by the parameters in the function. For the normal distribution these parameters are the mean and the standard deviation. Every variable that follows the normal distribution has the same bell shaped curve and the distributions differ only in their means and/or standard deviations. The mean determines where the centre of the distribution is, the standard deviation determines the spread (@fig-normal-distributions).



```{r}
#| echo: false
#| label: fig-normal-distributions
#| fig-cap: "The mean determines where the centre of the distribution is, the standard deviation determines the spread. The distributions on the left have the same mean but different standard deviations. The distributions on the right have the same standard deviation but different means."
mu <- 3300
sd <- 600
mu_shift <- 900
sd_shift <- 250

a <- ggplot(data = data.frame(mass = c(mu - 3 * sd, mu + 3 * sd)),
       aes(mass)) +
  stat_function(fun = dnorm, n = 101, 
                args = list(mean = mu, sd = sd)) +
  stat_function(fun = dnorm, n = 101, 
                args = list(mean = mu, sd = sd - sd_shift)) +
  stat_function(fun = dnorm, n = 101, 
                args = list(mean = mu, sd = sd + sd_shift)) +
  scale_y_continuous(breaks = NULL, name = "",
                     expand = c(0, 0),
                     limits = c(0, 0.0016)) +
  scale_x_continuous(breaks = NULL, name = "",
                     expand = c(0, 0),
                     limits = c(1000, 6000)) + 
  annotate("text", x = mu, y = 0.0013, 
           label = "Same mean\nDifferent standard deviations") +
  theme_classic() +
  theme(axis.line.y = element_blank())


b <- ggplot(data = data.frame(mass = c(mu - 3 * sd, mu + 3 * sd)),
       aes(mass)) +
  stat_function(fun = dnorm, n = 101, 
                args = list(mean = mu - mu_shift, sd = sd)) +
  stat_function(fun = dnorm, n = 101, 
                args = list(mean = mu, sd = sd)) +
  stat_function(fun = dnorm, n = 101, 
                args = list(mean = mu + mu_shift, sd = sd)) +
  scale_y_continuous(breaks = NULL, name = "",
                     expand = c(0, 0),
                     limits = c(0, 0.0016)) +
  scale_x_continuous(breaks = NULL, name = "",
                     expand = c(0, 0),
                     limits = c(1000, 6000)) + 
  annotate("text", x = mu, y = 0.0013, 
           label = "Same standard deviation\nDifferent means") +
  theme_classic() +
  theme(axis.line.y = element_blank())

a + b + plot_layout(ncol = 2)


```

Whilst normal distributions vary in the location on the horizontal axis and their width, they all share some properties and it is these shared properties that allow the calculation of confidence intervals with some standard formulae.  The properties are that a fix percentage of values lie between a given number of standard deviations. For example, 68.2% values lie between plus and minus one stadrad deviation from the mean and 95% values lie between +/-1.96 standard deviations., Another way of saying this is that there is a 95% chance that a value will lie between +/-1.96 standard deviations from the mean.  This is illustrated in @fig-norm-dist-means-properties.
 


```{r}
#| echo: false
#| label: fig-norm-dist-means-properties
#| fig-cap: "Normal distributions share some properties regardless of the mean and standard deviation. 68% of the values are within 1 standard deviation of the mean and 95% are within 1.96 standard deviations."


# functions for shading under a normal distribution curve
# 1 sd
dnorm_limit_1 <- function(x) {
  y <- dnorm(x)
  y[x < -1 |  x > 1] <- NA
  return(y)
}
# 1.96 sd
dnorm_limit_95 <- function(x) {
  y <- dnorm(x)
  y[x < -1.96 |  x > 1.96] <- NA
  return(y)
}

a <- ggplot(data = data.frame(x = c(-3, 3)),
       aes(x)) +
  stat_function(fun = dnorm_limit_1,
                geom = "area",
                fill = pal2[1]) +
  stat_function(fun = dnorm, n = 101) +
  annotate("text", x = 0, y = 0.2, 
           label = "68%",
           size = 6) +
  scale_y_continuous(breaks = NULL, name = "",
                     expand = c(0, 0)) +
  scale_x_continuous(breaks = c(-1, 0, 1), name = "",
                     expand = c(0, 0),
                     limits = c(-3, 3)) +
  theme_classic() +
  theme(axis.line.y = element_blank(),
        axis.ticks = element_blank())

b <- ggplot(data = data.frame(x = c(-3, 3)),
       aes(x)) +
  stat_function(fun = dnorm_limit_95,
                geom = "area",
                fill = pal2[1]) +
  stat_function(fun = dnorm, n = 101) +
  annotate("text", x = 0, y = 0.2, 
           label = "95%",
           size = 6) +
  scale_y_continuous(breaks = NULL, name = "",
                     expand = c(0, 0)) +
  scale_x_continuous(breaks = c(-1.96, 0, 1.96), name = "",
                     expand = c(0, 0),
                     limits = c(-3, 3)) +
  theme_classic() +
  theme(axis.line.y = element_blank(),
        axis.ticks = element_blank())

a + b + plot_layout(ncol = 1)

```


## Confidence intervals on large samples

$$
\bar{x} \pm 1.96 \times s.e.
$$ {#eq-ci-large-sample}


95% of confidence intervals calculated in this way will contain the true population mean.  


Do you have to remember the value of 1.96?  Not if you have R!

### Whats is `qnorm()`?


`qnorm` is the inverse of `dnorm` and calculates the value of x for a given probability.  For example, the probability of a value being less than 1.96 standard deviations from the mean is 0.975.  `qnorm` can be used to calculate this value.



## Confidence intervals on small samples

$$
\bar{x} \pm t_{[d.f.]} \times s.e.
$$ {#eq-ci-small-sample}